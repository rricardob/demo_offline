plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'checkstyle' // ðŸ‘ˆ AÃ±ade este plugin
	id 'jacoco'
}

group = 'com.example.offline'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

ext {
	mapstructVersion = "1.5.5.Final"
}

jacoco {
	toolVersion = "0.8.11"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	annotationProcessor 'org.projectlombok:lombok'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	runtimeOnly 'org.postgresql:postgresql'
	compileOnly 'org.projectlombok:lombok'
	compileOnly "org.mapstruct:mapstruct:${mapstructVersion}"
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.2'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.jacocoTestReport {
	reports {
		xml.required = true
		csv.required = false
		html.outputLocation.set(file("$buildDir/reports/jacoco"))
	}
}

tasks.test {
	finalizedBy jacocoTestReport
}

checkstyle {
	toolVersion = '10.12.1' // o versiÃ³n mÃ¡s reciente
	configFile = file("config/checkstyle/checkstyle.xml")
	ignoreFailures = false
	reportsDir = file("build/reports/checkstyle")
}